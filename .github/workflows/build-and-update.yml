name: build_and_update

on:
    push:
      branches:
      - "main"
    repository_dispatch:
      types: [trigger-workflow]
    workflow_dispatch:

jobs:
    build-and-update-actor:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Set container name
            run: echo "CONTAINER_NAME=mesonet-flags" >> $GITHUB_ENV
          - name: Get date and hash
            run: echo "TAG=$(date --iso-8601)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          - name: Log in to the container registry
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{ secrets.PUSH_PACKAGE_USERNAME }}
              password: ${{ secrets.PUSH_PACKAGE_TOKEN }}
          - name: Build container
            run: docker build --build-arg HCDP_API_TOKEN=${HCDP_API_TOKEN} . --tag ghcr.io/hcdp/${{ env.CONTAINER_NAME }}:${{ env.TAG }}
          - name: Tag the container as latest
            run: docker tag ghcr.io/hcdp/${{ env.CONTAINER_NAME }}:${{ env.TAG }} ghcr.io/hcdp/${{ env.CONTAINER_NAME }}:latest
          - name: Push the container
            run: docker push ghcr.io/hcdp/${{ env.CONTAINER_NAME }}:${{ env.TAG }} && docker push ghcr.io/hcdp/${{ env.CONTAINER_NAME }}:latest
          - uses: actions/setup-python@v5
            with:
              python-version: '3.10'
          - name: Install tapipy and dotenv
            run: python -m pip install tapipy
          - name: Run Tapis actor update script
            run: python update_actor.py ghcr.io/hcdp/${{ env.CONTAINER_NAME }}:${{ env.TAG }} ${{ secrets.ACTOR_ID }} ${{ secrets.TAPIS_USERNAME }} ${{ secrets.TAPIS_PASSWORD }}
          